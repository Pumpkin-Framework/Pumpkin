database {
    # The JDBC connection string for the database
    connection-string="jdbc:postgresql://nds-db1.network.eth2.link/pumpkin?user=postgres&password=laserint"
}
# The mappack to use for the lobby. The lobby is the map where players will enter if they join the server for the first time
lobby-mappack=5
# Configuration for the Lua VM
lua-vm {
    # Whether to allow loading precompiled bytecode via Lua's `load`
    # function, or related functions (`loadfile`, `dofile`). Enable this
    # only if you absolutely trust all users on your server and all Lua
    # code you run. This can be a MASSIVE SECURITY RISK, since precompiled
    # code can easily be used for exploits, running arbitrary code on the
    # real server! I cannot stress this enough: only enable this if you
    # know what you're doing.
    allow-bytecode=false
    # Prevent Pumpkin calling Lua's os.setlocale method to ensure number
    # formatting is the same on all systems it is run on. Use this if you
    # suspect this might mess with some other part of Java (this affects
    # the native C locale).
    disable-locale-changing=false
    # Disable memory limit enforcement. This means Lua states can
    # theoretically use as much memory as they want. Only relevant when
    # using the native lua implementation.
    disable-memory-limit=false
    # This setting is meant for debugging errors that occur in Lua callbacks.
    # Per default, if an error occurs and it has a message set, only the
    # message is pushed back to lua, and that's it. If you encounter weird
    # errors or are developing mappack scripts, you'll want the stacktrace for those
    # errors. Enabling this setting will log them to the game log. This is
    # disabled per default to avoid spamming the log with inconsequental
    # exceptions suck IllegalArgumentExceptions and the like.
    log-callback-errors=false
    # Override for the worker threads' thread priority. If set to a value
    # lower than 1 it will use the default value, which is half-way between
    # the system minimum and normal priority. Valid values may differ between
    # Java versions, but usually the minimum value (lowest priority) is 1,
    # the normal value is 5 and the maximum value is 10. If a manual value is
    # given it is automatically capped at the maximum.
    # USE THIS WITH GREAT CARE. Using a high priority for worker threads may
    # avoid issues with VMs timing out, but can also lead to higher
    # server load. AGAIN, USE WITH CARE!
    thread-priority=-1
    # The overall number of threads to use to drive lua VMs. Whenever a
    # VM should run, for example because a signal should be processed or
    # some sleep timer expired it is queued for execution by a worker thread.
    # The higher the number of worker threads, the less likely it will be that
    # VMs block each other from running, but the higher the host
    # system's load may become.
    threads=4
    # The time in seconds a program may run without yielding before it is
    # forcibly aborted. This is used to avoid stupidly written or malicious
    # programs blocking other VMs by locking down the executor threads.
    timeout=5
    # The size of the temporary filesystem each VM gets, in bytes
    tmpfs-size=65536
}
